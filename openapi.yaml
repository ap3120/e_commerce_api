openapi: 3.0.1
info:
  title: E-commerce API
  version: 1.0.0
  description: >-
    A fully-functioning e-commerce application REST API that allows users to
    perform various CRUD operations such as registering an account, browsing
    products for sale, etc.
paths:
  /users:
    summary: Get all the users data.
    description: >-
      This path is used to get all the users data from the e_commerce_api
      database.
    get:
      summary: Get the users data.
      description: Get the users data from the users table.
      operationId: get_users
      responses:
        '200':
          content:
            application/json:
              examples:
                users:
                  value: |-
                    [
                      {
                        "id": 1,
                        "first_name": "James",
                        "last_name": "Knowles",
                        "email": "james.k@app.com",
                        "password": "$2b$10$NjIIdPCoDvrDkf.vJpnD8.fiNYYfrOylUxE8UxjWoaVihZhjrMTNK"
                      },
                      {
                        "id": 2,
                        "first_name": "Katie",
                        "last_name": "Griffin",
                        "email": "katie.griffin@app.com",
                        "password": "$2b$10$I0EomPSodVuFcUx9sEHi/eHR40wDjmcnuTHbPyBRjLERu53jywGVq"
                      }
                    ]
        default:
          description: Default error sample response
      tags:
        - Users
  /users/id:
    summary: Get a user by id
    description: This path is used to get a user by id from the e_commerce_api database.
    put:
      summary: Update a user password.
      description: Update a user password in the users table.
      operationId: put_user
      responses:
        '200':
          content:
            application/json:
              examples:
                users:
                  value: |-
                    {
                      "msg": "Password successfully updated."
                    }
        default:
          description: Default error sample response
      tags:
        - Users
    delete:
      summary: Delete a user.
      description: Delete a user from the users table.
      operationId: delete_user
      responses:
        '200':
          content:
            application/json:
              examples:
                users:
                  value: |-
                    {
                      "msg": "User successfully deleted."
                    }
        default:
          description: Default error sample response
      tags:
        - Users
  /register:
    summary: Add a user.
    description: Add a user to the users table.
    post:
      summary: Create a user.
      description: Create a new user in the users table.
      operationId: post_register
      responses:
        '200':
          content:
            application/json:
              examples:
                users:
                  value: |-
                    {
                      "id": 1,
                      "first_name": "Bob",
                      "last_name": "Smart",
                      "email": "bob.smart@app.com",
                      "password": "$2b$10$I0EomPSodVuFcUx9sEHi/eHR40wDjmcnuTHbPyBRjLERu53jywGVq"
                    }
        default:
          description: Default error sample response.
      tags:
        - Register
  /login:
    summary: Login a user.
    description: Login a user by creating a session.
    post:
      summary: Login a user.
      description: Login a user and create a user session.
      operationId: post_login
      responses:
        '200':
          content:
            application/json:
              examples:
                users:
                  value: |-
                    {
                      "user": {
                        "id": 34,
                        "first_name": "b",
                        "last_name": "b",
                        "email": "b@b",
                        "password": "$2b$10$E21GEHPHZRMy5lQunYPRpedpdgMjJldBc5QvHqG15vjyAtsLyN8oW"
                      },
                      "session": {
                        "cookie": {
                          "originalMaxAge": 86400000,
                          "expires": "2022-12-04T15:36:44.680Z",
                          "secure": false,
                          "httpOnly": true,
                          "path": "/",
                          "sameSite": "none"
                        },
                        "passport": {
                          "user": 34
                        }
                      }
                    }
        default:
          description: Default error sample response
      tags:
        - Login
  /orders:
    summary: Create an order.
    description: This path is used to add an order to the orders table.
    post:
      summary: Create an order.
      description: Create an order into the orders table.
      operationId: post_orders
      responses:
        '200':
          content:
            application/json:
              examples:
                orders:
                  value: |-
                    {
                      "msg": "Order successfully created."
                    }
        default:
          description: Default error sample response
      tags:
        - Orders
  /orders/id:
    summary: Get order by user id.
    description: This path is used to get an order by user id from the orders table.
    get:
      summary: Get order by user id.
      description: Get order by user id from the orders table.
      operationId: get_order
      responses:
        '200':
          content:
            application/json:
              examples:
                orders:
                  value: |-
                    {
                      "order_id": 2,
                      "date": "2022-11-04T00:00:00.000Z",
                      "total_price": 10,
                      "user_id": 9
                    }
        default:
          description: Default error sample response
      tags:
        - Orders
  /products/category:
    summary: Get products by category.
    description: This path is used to get products by category from the products table.
    get:
      summary: Get products by category.
      description: Get products by category from the products table.
      operationId: get_product
      responses:
        '200':
          content:
            application/json:
              examples:
                products:
                  value: |-
                    {
                      "product_id": 1,
                      "name": "Clevo Laptop L140PU",
                      "category": "laptop",
                      "price": 1032,
                      "description": null
                      "image_url": "clevo.png"
                    }
        default:
          description: Default error sample response
      tags:
        - Products
  /logout:
    summary: Logout a user.
    description: This path is used to logout a user
    get:
      summary: Logout.
      description: Logout.
      operationId: logout
      responses:
        '200':
          content:
            application/json:
              examples:
                Successfull logout:
                  value: |-
                    {
                      "msg": "Successfully logged out."
                    }
        default:
          description: Default error sample response
      tags:
        - Logout
